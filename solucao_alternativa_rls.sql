-- =====================================================
-- SOLU√á√ÉO ALTERNATIVA RLS - PERMISS√ïES LIMITADAS
-- =====================================================

-- Este script funciona mesmo com permiss√µes limitadas
-- Foca apenas na tabela users que voc√™ pode modificar

-- =====================================================
-- 1. VERIFICAR PERMISS√ïES ATUAIS
-- =====================================================

-- Verificar se voc√™ pode modificar a tabela users
SELECT 
  schemaname, 
  tablename, 
  rowsecurity 
FROM pg_tables 
WHERE tablename = 'users'
  AND schemaname = 'public';

-- =====================================================
-- 2. DESABILITAR RLS APENAS NA TABELA USERS
-- =====================================================

-- Desabilitar RLS na tabela users (voc√™ tem permiss√£o para isso)
ALTER TABLE users DISABLE ROW LEVEL SECURITY;

-- =====================================================
-- 3. REMOVER POL√çTICAS DA TABELA USERS
-- =====================================================

-- Remover pol√≠ticas da tabela users
DROP POLICY IF EXISTS "Enable insert for authenticated users" ON users;
DROP POLICY IF EXISTS "Enable update for users based on user_id" ON users;
DROP POLICY IF EXISTS "Enable read access for users based on user_id" ON users;
DROP POLICY IF EXISTS "Enable read access for professionals" ON users;
DROP POLICY IF EXISTS "Enable read access for public search" ON users;
DROP POLICY IF EXISTS "Allow authenticated insert" ON users;
DROP POLICY IF EXISTS "Allow authenticated update" ON users;
DROP POLICY IF EXISTS "Allow authenticated select" ON users;
DROP POLICY IF EXISTS "Allow public select" ON users;

-- =====================================================
-- 4. VERIFICAR CONFIGURA√á√ÉO
-- =====================================================

-- Verificar se RLS est√° desabilitado na tabela users
SELECT 
  schemaname, 
  tablename, 
  rowsecurity 
FROM pg_tables 
WHERE tablename = 'users'
  AND schemaname = 'public';

-- Verificar que n√£o h√° pol√≠ticas na tabela users
SELECT 
  schemaname,
  tablename,
  policyname
FROM pg_policies 
WHERE tablename = 'users'
  AND schemaname = 'public';

-- =====================================================
-- 5. CONFIGURAR STORAGE VIA DASHBOARD
-- =====================================================

/*
‚ö†Ô∏è IMPORTANTE: Para o Storage, voc√™ precisa configurar via Dashboard

1. V√° para Storage no Supabase Dashboard
2. Clique em "New Bucket" se n√£o existir
3. Crie os buckets:
   - fotoperfil (p√∫blico)
   - fotopost (p√∫blico)
   - fotodecapa (p√∫blico)
   - logotipo (p√∫blico)

4. Para cada bucket, nas configura√ß√µes:
   - Marque como "Public"
   - Em "Policies", adicione:
     - "Allow authenticated uploads"
     - "Allow public viewing"
*/

-- =====================================================
-- 6. TESTAR INSER√á√ÉO
-- =====================================================

-- Testar se √© poss√≠vel inserir na tabela users
-- (Este comando ser√° executado apenas para verificar)
-- INSERT INTO users (id, email, name, user_type, role) 
-- VALUES ('test-id', 'test@test.com', 'Test User', 'usuario', 'client');

-- =====================================================
-- 7. COMENT√ÅRIOS IMPORTANTES
-- =====================================================

/*
‚úÖ O QUE FOI FEITO:
- RLS desabilitado na tabela users
- Todas as pol√≠ticas removidas da tabela users
- Cadastro deve funcionar agora

‚ö†Ô∏è STORAGE:
- Voc√™ precisa configurar via Dashboard
- N√£o consegue modificar via SQL (permiss√µes)
- Configure buckets como p√∫blicos

üéØ PR√ìXIMOS PASSOS:
1. Execute este script
2. Configure Storage via Dashboard
3. Teste o cadastro
4. Se funcionar, reabilitar RLS depois

üìù NOTA:
Esta solu√ß√£o resolve o problema do cadastro mesmo com
permiss√µes limitadas no Supabase.
*/

-- =====================================================
-- FIM DO SCRIPT
-- ===================================================== 